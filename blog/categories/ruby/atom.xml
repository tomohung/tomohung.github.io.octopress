<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | The Life Alchemist]]></title>
  <link href="http://www.tomohung.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://www.tomohung.com/"/>
  <updated>2015-01-14T22:08:35+08:00</updated>
  <id>http://www.tomohung.com/</id>
  <author>
    <name><![CDATA[Tomo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Show HTTP Is Stateless by Sinatra]]></title>
    <link href="http://www.tomohung.com/blog/2015/01/14/show-http-is-stateless-by-sinatra/"/>
    <updated>2015-01-14T21:25:15+08:00</updated>
    <id>http://www.tomohung.com/blog/2015/01/14/show-http-is-stateless-by-sinatra</id>
    <content type="html"><![CDATA[<p>In tealeaf week 3, introduce to HTTP.</p>

<p>The most important thing is that, HTTP is stateless.</p>

<p>What&rsquo;s the influnce by this property? Showing this by Sinatra.</p>

<!--more-->


<p>first, follow <a href="http://www.sinatrarb.com/intro.html">Sinatra intro</a> to run basic function:
then try this code:</p>

<pre><code class="ruby main.rb">require 'sinatra'

before do
  @name = 'Guest'
end

get '/' do
  erb :home
end

post '/set_name' do
  @name = 'tealeaf'
  redirect '/'
end
</code></pre>

<p>and this will show a button, click the button will invoke a post request back to <code>set_name</code> in main.rb:</p>

<p>&#8220;` erb home.erb</p>

<h4>hi~ <%= @name %> </h4>


<p><form action="/set_name" method="post">
  <input class="btn" type="submit" name="name">
</form>
&#8220;`</p>

<p>OK, then what will <code>@name</code> show in home.erb after click button??</p>

<p>It shows <code>Guest</code>, not <code>tealeaf</code>. Why?</p>

<p><img class="<a" src="href="http://i.minus.com/i9oeLWDYI4DBb.png">http://i.minus.com/i9oeLWDYI4DBb.png</a>&#8221;></p>

<p>The key point is: when 2 redirect to 3, it&rsquo;s a new request, instance variable like @name will be deleted after redirect, then create a new one.</p>

<p>That&rsquo;s why @name still shows <code>Guest</code>.</p>

<p>How about this way:</p>

<pre><code class="ruby main.rb">require 'sinatra'

before do
  @name = 'Guest'
end

get '/' do
  erb :home
end

post '/set_name' do
  @name = 'tealeaf'
  erb :home
end
</code></pre>

<p>Now using erb to embeded <code>home.erb</code> into the same request(&lsquo;/set_name&rsquo;). Then you&rsquo;ll see <code>@name</code> shows <code>tealeaf</code>!!</p>

<p>This experience shows me how HTTP is stateless.</p>

<p>And how web developers make it like stateness is a long way to go.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reflection to Tealeaf Week 3]]></title>
    <link href="http://www.tomohung.com/blog/2015/01/13/reflection-to-tealeaf-week-3/"/>
    <updated>2015-01-13T22:23:15+08:00</updated>
    <id>http://www.tomohung.com/blog/2015/01/13/reflection-to-tealeaf-week-3</id>
    <content type="html"><![CDATA[<p><img class="right <a" src="href="http://i.minus.com/ilSTmPNHVpVTm.png">http://i.minus.com/ilSTmPNHVpVTm.png</a>&#8221; width=&#8221;320&#8221;></p>

<p>It&rsquo;s realy a tough week for me, because I&rsquo;m totally new to web development.
There are lots of material need to be done:</p>

<ul>
<li>One new concept book: HTTP <a href="https://www.gotealeaf.com/books/http">https://www.gotealeaf.com/books/http</a></li>
<li>Two new languages: HTML &amp; CSS <a href="http://www.codecademy.com/tracks/htmlcss">http://www.codecademy.com/tracks/htmlcss</a></li>
<li>Two new frameworks: <a href="http://www.sinatrarb.com/intro.html">Sinatra</a> &amp; <a href="http://getbootstrap.com/">bootstrap</a></li>
</ul>


<p>I think the most important thing in this week is &ldquo;HTTP is stateless&rdquo;.</p>

<p>And using Sinatra show me this property explicit.
Every request in main.rb is independant with each other, using instance variables to store data only survive its scope.</p>

<p>I also write a brief post to memo this property<a href="http://www.tomohung.com/blog/2015/01/14/show-http-is-stateless-by-sinatra/">(HTTP is Stateless)</a>.
Using chache is another way to feel free in thinking programming in the old way.
Though I still use class to complete this assignment, I feel comfortable with this, because I don&rsquo;t need to make a wheel again.</p>

<p>The first struggle in this week is when I saw something like <code>&lt;form action..../&gt;</code>, I have no idea what&rsquo;s this?! because HTML &amp; CSS course in codecademy never metion this. After google that, I found there are plenty of other syntax I didn&rsquo;t know, <a href="http://www.w3schools.com/html/html5_intro.asp">w3shool</a> help me to know more about HTML.</p>

<p>Another struggle is Sinatra, when I first time read the intro, I totally had no idea what those nouns mean. <code>get '/' {}</code> seems not a nature ruby way; what <code>get</code> <code>post</code> are ??</p>

<p>Following with video and implement functions and pages, then I read Sinatra intro again, this time I feel much clear what its said.</p>

<p>Another horrible thing is on viewing video introduce to modern web development. There are so many tools, concepts, languages need to know. Wow&hellip;</p>

<p>To be a web development, I know I have to keep going.
Moving to Lesson 4.</p>

<p>Finally, here is my blog talking about Reflections for tealeaf lessons.
<a href="http://www.tomohung.com/blog/categories/tealeaf/">http://www.tomohung.com/blog/categories/tealeaf/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reflection of Tealeaf Week 2]]></title>
    <link href="http://www.tomohung.com/blog/2015/01/07/reflection-to-tealeaf-lesson-2/"/>
    <updated>2015-01-07T08:15:13+08:00</updated>
    <id>http://www.tomohung.com/blog/2015/01/07/reflection-to-tealeaf-lesson-2</id>
    <content type="html"><![CDATA[<p><img class="right <a" src="href="http://i.minus.com/ibnRw2O1pxsQam.png">http://i.minus.com/ibnRw2O1pxsQam.png</a>&#8221; width=&#8221;320&#8221;></p>

<p>Although I have some option video not done yet, I want to share some of my reflection.</p>

<p>When I came to lesson 2, first I found that discussion is less than lesson 1 obviously. I think this imply the lesson OOP is harder than before. Thank god I finished three assignments in a week, how I can do this is because:</p>

<ol>
<li><p>As a C++ programmer, OOP concept is also the same in Ruby, like inheritance, polymorphism, composition&hellip;etc. Since I have some experience to OOP, familiar with Ruby&rsquo;s style is not a hard work for me.</p></li>
<li><p><a href="http://www.gotealeaf.com/books/oo_ruby"><code>Object Oriented Program book</code></a> is fantastic!! I spent one night to read it, then next day I can just start to implement my idea without too much struggles. It clearly explain the relationship between <code>is-a</code> and <code>has-a</code> corresponding to inheritance and mixin.</p></li>
</ol>


<p>And I do fall in love with Ruby, <code>convention</code> is over configuration becomes nature. In lesson 1, it&rsquo;s weird for me to pass a variable into method, but modified or not depends on what actions in the method. Now I start to think it&rsquo;s convenient to decide modified the variable in the method.
<code>attr_accessor</code> is another kind of example, default getter and setter helps a lot to reduce typing time.</p>

<p>Using polymorphism, I don&rsquo;t need to care about how using virtual function, just inheritance class then use it.
Especially for method <code>super</code>, the best way to reduce redundant code.
One suggestion, If subclass&rsquo;s initialize method doesn&rsquo;t use super, then you might think the superclass and subclass relationship is <code>has-a</code>, not <code>is-a</code>.</p>

<p>I do love my <a href="https://github.com/tomohung/tealeaf/blob/master/Lesson2/oo_tic_tac_toe.rb">Tic-Tac-Toe</a> and <a href="https://github.com/tomohung/tealeaf/blob/master/Lesson2/oo_blackjack.rb">Black Jack</a> implemented by OO. In Tic-Tac-Toe, I use polymorphism to implement single player and double players mode. In Black Jack, I add feature that player can play with others NPC together, not just with dealer. This make the game likely in the real world. Without OO concept, these features are hard to implement.</p>

<p>Next lesson is absolutely my challenge, because I&rsquo;m totally new for web development.
But I do look forward to it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reflection to Tealeaf Week 1]]></title>
    <link href="http://www.tomohung.com/blog/2015/01/01/reflection-to-tealeaf-lesson-1/"/>
    <updated>2015-01-01T16:03:33+08:00</updated>
    <id>http://www.tomohung.com/blog/2015/01/01/reflection-to-tealeaf-lesson-1</id>
    <content type="html"><![CDATA[<p><img class="right <a" src="href="http://i.minus.com/ibsevSRoOPCEmU.png">http://i.minus.com/ibsevSRoOPCEmU.png</a>&#8221; width=&#8221;320&#8221;></p>

<p>Happy new year!!</p>

<p>Before I talk about where I struggled with, I would like to say something before I join the course.
I am using C++ for few years, and coding is part of my job. Before join the course, I&rsquo;ve also done the <a href="http://learnrubythehardway.org/book/">Learn Ruby The Hard Way</a> to lesson 45. <code>Learn Ruby The Hard Way</code> is also a good pratice, especially for <code>muscle memory</code>. It focus on <code>just typing ruby</code> when learning ruby knowledge.</p>

<p>After that, I start <code>Prep Course</code> @ tealeaf, reading the book <a href="http://www.gotealeaf.com/books/ruby"><code>Introduce to Programing</code></a>. <code>Introduction to Programing</code> is also an amazing book, it use a simple way to explain more detail in ruby, and I really did several times &ldquo;Ah ha!&rdquo; when reading it. Then I thought I was ready for lesson 1, but maybe I&rsquo;m wrong :p</p>

<p>About my struggles, as a C++ programmer, there are mainly two &ldquo;What?&rdquo; for ruby:</p>

<ul>
<li><p>variable scope: in C++, every local variable only survive in its scope, but in ruby, this is not always true. Even now, I&rsquo;m still a little confused with that. Glad that I find a way to deal with this: <code>Never use outside variable in insdie scope, make them in different name</code>.</p></li>
<li><p>pointer &amp; reference: when passing a variable to functions(in ruby called: methods), if varaible has prefix like <code>*</code> or <code>&amp;</code>, it obvious means this variable may be modified in this methods. Ruby doesn&rsquo;t take this way, input variables in method could be modified just by what action do inside the method. Fotunately, ruby usaually append suffix <code>!</code> behind method&rsquo;s name to indicate this method modify input variable.</p></li>
</ul>


<p>Even these, I do love ruby.</p>

<ul>
<li>There are a lot of built-in convenient methods for String, Array, Hash&hellip;etc. And more are waiting to discover</li>
<li>More fluent phrase for flow control, if, unless, while, until&hellip;etc. Readable code is becoming more and more important.</li>
<li>type less key :p</li>
</ul>


<p>And special Thanks for TA&rsquo;s:
Without their help, I couldn&rsquo;t finished these assignments on time. Because of unfamiliar with ruby methods, wrong code style, improper naming&hellip;etc. They always give me timely advice.</p>

<p>Last, share my experience for developing game <code>Black Jack</code>:</p>

<ul>
<li>write psuedo code : 10 min</li>
<li>coding : 2 hours</li>
<li>debugging : 2 hours more</li>
<li>feedback from TA, then refactor: 2 hours</li>
</ul>


<p>By the way, the most difficulty in Lesson 1 is completing &ldquo;Tic-Tac-Toe&rdquo; AI, it tooks me 10 hours more.
If you are totally new to program, don&rsquo;t be disppointed at spending a lot of time, because me too!!
If you are take these assignment as piece of cake, well, let&rsquo;s move to Lesson 2. See you.</p>
]]></content>
  </entry>
  
</feed>
