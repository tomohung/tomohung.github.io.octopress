<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Sinatra | The Life Alchemist]]></title>
  <link href="http://www.tomohung.com/blog/categories/sinatra/atom.xml" rel="self"/>
  <link href="http://www.tomohung.com/"/>
  <updated>2015-05-04T09:08:18+08:00</updated>
  <id>http://www.tomohung.com/</id>
  <author>
    <name><![CDATA[Tomo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Reflection to Tealeaf Lesson 4]]></title>
    <link href="http://www.tomohung.com/blog/2015/01/22/reflection-to-tealeaf-lesson-4/"/>
    <updated>2015-01-22T11:59:53+08:00</updated>
    <id>http://www.tomohung.com/blog/2015/01/22/reflection-to-tealeaf-lesson-4</id>
    <content type="html"><![CDATA[<p><img class="right <a" src="href="http://i.minus.com/iS2bpDcNcj44W.jpg">http://i.minus.com/iS2bpDcNcj44W.jpg</a>&#8221; width=&#8221;320&#8221;></p>

<p>To be honest, I still feel uncomfortable with this week. From week 3, I learned html &amp; css, to week 4, I learned jQuery &amp; Ajax. It&rsquo;s definitely not enough only rely on Codecademy&rsquo;s course, so I decide to do one more app, tic-tac-toe on wep. I think this should make me more comfortable with these lessons.</p>

<p>But I&rsquo;m wrong, ha!! I still get stuck when doing UI and interactive design. Since I already knew that the most important thing at this moment is becoming a robust rails development, I decide to keep my pace and going to next course.</p>

<p>Recap to this course:</p>

<ul>
<li>week 1, basic Ruby program.</li>
<li>week 2, OOP in Ruby.</li>
<li>week 3, <strong>HTTP is stateless</strong>, HTML &amp; CSS, Sinatra, and Bootstrap.</li>
<li>week 4, jQuery and Ajax.</li>
</ul>


<p>One more thing, I thought I could be a full stack web developer before this course, then I knew I&rsquo;m wrong. There are a lot of knowledge in front end.</p>

<p>And now I have to keep focus on back end.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Show HTTP Is Stateless by Sinatra]]></title>
    <link href="http://www.tomohung.com/blog/2015/01/14/show-http-is-stateless-by-sinatra/"/>
    <updated>2015-01-14T21:25:15+08:00</updated>
    <id>http://www.tomohung.com/blog/2015/01/14/show-http-is-stateless-by-sinatra</id>
    <content type="html"><![CDATA[<p>In tealeaf week 3, introduce to HTTP.</p>

<p>The most important thing is that, HTTP is stateless.</p>

<p>What&rsquo;s the influnce by this property? Showing this by Sinatra.</p>

<!--more-->


<p>first, follow <a href="http://www.sinatrarb.com/intro.html">Sinatra intro</a> to run basic function:
then try this code:</p>

<pre><code class="ruby main.rb">require 'sinatra'

before do
  @name = 'Guest'
end

get '/' do
  erb :home
end

post '/set_name' do
  @name = 'tealeaf'
  redirect '/'
end
</code></pre>

<p>and this will show a button, click the button will invoke a post request back to <code>set_name</code> in main.rb:</p>

<p>&#8220;` erb home.erb</p>

<h4>hi~ <%= @name %> </h4>


<p><form action="/set_name" method="post">
  <input class="btn" type="submit" name="name">
</form>
&#8220;`</p>

<p>OK, then what will <code>@name</code> show in home.erb after click button??</p>

<p>It shows <code>Guest</code>, not <code>tealeaf</code>. Why?</p>

<p><img class="<a" src="href="http://i.minus.com/i9oeLWDYI4DBb.png">http://i.minus.com/i9oeLWDYI4DBb.png</a>&#8221;></p>

<p>The key point is: when 2 redirect to 3, it&rsquo;s a new request, instance variable like @name will be deleted after redirect, then create a new one.</p>

<p>That&rsquo;s why @name still shows <code>Guest</code>.</p>

<p>How about this way:</p>

<pre><code class="ruby main.rb">require 'sinatra'

before do
  @name = 'Guest'
end

get '/' do
  erb :home
end

post '/set_name' do
  @name = 'tealeaf'
  erb :home
end
</code></pre>

<p>Now using erb to embeded <code>home.erb</code> into the same request(&lsquo;/set_name&rsquo;). Then you&rsquo;ll see <code>@name</code> shows <code>tealeaf</code>!!</p>

<p>This experience shows me how HTTP is stateless.</p>

<p>And how web developers make it like stateness is a long way to go.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reflection to Tealeaf Week 3]]></title>
    <link href="http://www.tomohung.com/blog/2015/01/13/reflection-to-tealeaf-week-3/"/>
    <updated>2015-01-13T22:23:15+08:00</updated>
    <id>http://www.tomohung.com/blog/2015/01/13/reflection-to-tealeaf-week-3</id>
    <content type="html"><![CDATA[<p><img class="right <a" src="href="http://i.minus.com/ilSTmPNHVpVTm.png">http://i.minus.com/ilSTmPNHVpVTm.png</a>&#8221; width=&#8221;320&#8221;></p>

<p>It&rsquo;s realy a tough week for me, because I&rsquo;m totally new to web development.
There are lots of material need to be done:</p>

<ul>
<li>One new concept book: HTTP <a href="https://www.gotealeaf.com/books/http">https://www.gotealeaf.com/books/http</a></li>
<li>Two new languages: HTML &amp; CSS <a href="http://www.codecademy.com/tracks/htmlcss">http://www.codecademy.com/tracks/htmlcss</a></li>
<li>Two new frameworks: <a href="http://www.sinatrarb.com/intro.html">Sinatra</a> &amp; <a href="http://getbootstrap.com/">bootstrap</a></li>
</ul>


<p>I think the most important thing in this week is &ldquo;HTTP is stateless&rdquo;.</p>

<p>And using Sinatra show me this property explicit.</p>

<p>Every request in main.rb is independant with each other, using instance variables to store data only survive its scope.</p>

<p>I also write a brief post to memo this property<a href="http://www.tomohung.com/blog/2015/01/14/show-http-is-stateless-by-sinatra/">(HTTP is Stateless)</a>.
Using chache is another way to feel free in thinking programming in the old way.</p>

<p>Though I still use class to complete this assignment, I feel comfortable with this, because I don&rsquo;t need to make a wheel again.</p>

<p>The first struggle in this week is when I saw something like <code>&lt;form action..../&gt;</code>, I have no idea what&rsquo;s this?! because HTML &amp; CSS course in codecademy never metion this. After google that, I found there are plenty of other syntax I didn&rsquo;t know, <a href="http://www.w3schools.com/html/html5_intro.asp">w3shool</a> help me to know more about HTML.</p>

<p>Another struggle is Sinatra, when I first time read the intro, I totally had no idea what those nouns mean. <code>get '/' {}</code> seems not a nature ruby way; what <code>get</code> <code>post</code> are ??</p>

<p>Following with video and implement functions and pages, then I read Sinatra intro again, this time I feel much clear what its said.</p>

<p>Another horrible thing is on viewing video introduce to modern web development. There are so many tools, concepts, languages need to know. Wow&hellip;</p>

<p>To be a web development, I know I have to keep going.
Moving to Lesson 4.</p>

<p>Finally, here is my blog talking about Reflections for tealeaf lessons.
<a href="http://www.tomohung.com/blog/categories/tealeaf/">http://www.tomohung.com/blog/categories/tealeaf/</a></p>
]]></content>
  </entry>
  
</feed>
