<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Book | The Life Alchemist]]></title>
  <link href="http://www.tomohung.com/blog/categories/book/atom.xml" rel="self"/>
  <link href="http://www.tomohung.com/"/>
  <updated>2015-04-24T16:17:23+08:00</updated>
  <id>http://www.tomohung.com/</id>
  <author>
    <name><![CDATA[Tomo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Eloquent Ruby -1]]></title>
    <link href="http://www.tomohung.com/blog/2015/04/24/eloquent-ruby-1/"/>
    <updated>2015-04-24T14:15:45+08:00</updated>
    <id>http://www.tomohung.com/blog/2015/04/24/eloquent-ruby-1</id>
    <content type="html"><![CDATA[<h1>Eloquent Ruby</h1>

<p><code>Eloquent Ruby</code> by Russ Olsen 是一本在Tealeaf推薦的書，但它是所謂的『第二本Ruby的書』，而不是第一本，因為這本書裡面已經假設你對Ruby有基礎的觀念了。如果真的完全是初學者，Tealeaf推薦<a href="https://pine.fm/LearnToProgram/">Learn to Program by Chris Pine</a>，或者是<a href="http://learnrubythehardway.org/book/">Learn Ruby The Hard Way</a>，我覺得也不錯，還可以一邊練習打字。</p>

<p>目前我把Part I：Basics看完了，共九章，覺得自己有學到些東西，所以就把它給紀錄下來，並參雜一些個人的想法。</p>

<h1>Charpter 1 - Write Code That Looks Like Ruby</h1>

<p>其實這章指的就是Code Style。更多的Ruby Code Style可以參考<a href="https://github.com/bbatsov/ruby-style-guide">這裡</a>。</p>

<ul>
<li><p>Indent code with two spaces，以前在寫C++時就一直覺得縮排其實2個空白就夠了（雖然我還是用預設4個），轉成Ruby後倒是蠻習慣的，尤其是不用再寫分號跟括號。</p></li>
<li><p>什麼時候寫註解，告訴人家要怎麼用這個method，最好還帶範例。其它的像是最好用良好的命名去定義名稱，省去閱讀時的猜測，documenting itself.</p></li>
<li><p>如果是寫const value，最好用Uppercase with underline，像UPPERCASE_WITH_UNDERLINE。</p></li>
<li><p>因為括號是可以省略的，所以⋯⋯我常被搞混=___=，書用建議def method時後面帶參數時要用括號，但如果是一些接近口語的句子時可以考慮拿掉，如</p></li>
</ul>


<pre><code>puts 'hello world'。
</code></pre>

<ul>
<li>如果code block只有一行時最好縮成一排，反過來說如果是多行的話就用block</li>
</ul>


<pre><code>apples.each { |apple| apple.to_eat } # prefer if only single code statement

apples.each do |apple|
  apple.to_eat
end
</code></pre>

<ul>
<li><p>如果method name結尾帶一個問號?，通常表示這個方法回傳true or false，如<code>array.nil?</code>；又如果是驚嘆號!，通常表示可能有點危險（所謂的危險通常是把丟進來的參數被改變mutate了，如<code>array.map!</code>。但是不管是問號還是驚嘆號，都只是Ruby習慣的命名而已，不是強制性。</p></li>
<li><p>有慣例就會有例外，像是</p></li>
</ul>


<pre><code> pi = Float('3.14159')
</code></pre>

<p>Float開頭是大寫而不是小寫。為什麼我也不知道@_@</p>
]]></content>
  </entry>
  
</feed>
